version: "3.7"

# Supply DAGSTER_GIT_COMMIT to "docker-compose build --build-arg" to build
# against a different git hash than origin/master

services:
  docker_example_postgresql:
    image: postgres:11
    container_name: docker_example_postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_password"
      POSTGRES_DB: "postgres_db"
    networks:
      - postgres

  # This service runs the gRPC server that loads and executes user code, in both dagit
  # and dagster-daemon. By setting DAGSTER_CURRENT_IMAGE to its own image, we tell the
  # run launcher to use this same image when launching runs in a new container as well.
  docker_example_user_code:
    build:
      context: .
      dockerfile: ./user_code/Dockerfile
    container_name: docker_example_user_code
    ports:
      - "4000:4000"
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
      DAGSTER_CURRENT_IMAGE: "deploy_docker_docker_example_user_code"
    networks:
      - postgres

  # This service runs dagit, which loads the repository from the user code container.
  # Since our instance uses the QueuedRunCoordinator, any runs submitted from dagit will be put on
  # a queue and later dequeued and launched by dagster-daemon.
  docker_example_dagit:
    build:
      context: .
      dockerfile: ./dagit/Dockerfile
    container_name: docker_example_dagit
    ports:
      - "3000:3000"
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    networks:
      - postgres
    depends_on:
      - docker_example_postgresql
      - docker_example_user_code

  # This service runs the dagster-daemon process, which is responsible for taking runs
  # off of the queue and launching them, as well as creating runs from schedules or sensors.
  docker_example_daemon:
    build:
      context: .
      dockerfile: ./daemon/Dockerfile
    container_name: docker_example_daemon
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    volumes: # Make docker client accessible so we can launch containers using host docker
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - postgres
    depends_on:
      - docker_example_postgresql
      - docker_example_user_code

networks:
  postgres:
    driver: bridge
    name: postgres
